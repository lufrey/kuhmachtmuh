---
import Layout from "../layouts/Layout.astro";
import Cow from "../images/cow.png";
import { getPicture } from "@astrojs/image";

const picture = await getPicture({
  src: Cow,
  widths: [300, 600],
  fit: "contain",
  background: "#00000000",
  formats: ["webp", "avif", "png"],
  position: "center",
  alt: "kuh",
});
---

<Layout title="kuh macht muh">
  <main
    class="flex items-center justify-center w-screen h-screen p-4 text-gray-300 bg-green-700"
  >
    <div
      class="flex flex-col items-center w-full max-w-lg text-center h-4/5 md:h-3/4"
    >
      <div class="text-3xl">kuh macht muh</div>
      <div class="m-auto grow"></div>
      <div class="relative w-1/2 shrink">
        <picture class="block w-full">
          <source
            srcset={picture?.sources?.[0]?.srcset}
            type={picture?.sources?.[0]?.type}
            sizes={"(max-width: 600px) 300px, 100vw"}
          />
          <img {...picture.image} alt={"kuh"} class="w-full" />
        </picture>
        <div
          class="absolute right-0 p-4 text-gray-800 transition-opacity duration-200 -translate-y-full bg-gray-300 border-2 border-gray-800 rounded-bl-none opacity-0 rounded-3xl -top-10 md:-translate-x-full md:left-0 md:right-auto md:rounded-3xl md:rounded-tr-none md:top-56"
        >
          <div id="answer"></div>
        </div>
      </div>
      <div class="p-4"></div>
      <div>
        <div class="text-xl">stell der kuh eine frage:</div>
        <div class="p-2"></div>
        <form id="form" class="flex flex-col">
          <input
            type="text"
            name="q"
            maxlength="100"
            class="h-10 p-2 text-gray-800 border-2 border-gray-800 rounded-md"
          />
          <div class="p-2"></div>
          <button
            class="p-2 bg-green-900 border-gray-800 rounded-md"
            id="submit-button"
            type="submit">fragen</button
          >
        </form>
      </div>
    </div>
  </main>

  <script>
    const form = document.getElementById("form");
    const button = document.getElementById("submit-button");
    let timeout: number | undefined;

    const getAnswer = async (q: string) => {
      const url = new URL("/openai.json", window.location.href);
      const data = new URLSearchParams();
      data.append("q", q);
      const res = (await fetch(url, {
        method: "POST",
        body: data,
      }).then((res) => res.json())) as { message: { content: string } };

      return res.message.content.replace("\n", "").trim();
    };

    if (form) {
      form.onsubmit = async (e) => {
        e.preventDefault();
        loading(true);
        const question = new FormData(e.target as HTMLFormElement).get("q");
        const answer = await getAnswer(question as string);
        loading(false);
        const answerEl = document.getElementById("answer");
        if (answerEl) {
          answerEl.innerText = answer;
          answerEl.parentElement?.classList.remove("opacity-0");
          if (timeout) clearTimeout(timeout);
          timeout = setTimeout(() => {
            answerEl.parentElement?.classList.add("opacity-0");
          }, 30000);
        }
      };
    }

    // loading function to change the button text
    // with dot animation
    const loading = (loading: boolean) => {
      if (!button) return undefined;
      if (loading) {
        button.innerText = "fragen";
        const dots = document.createElement("span");
        dots.innerText = ".";
        button.appendChild(dots);
        const interval = setInterval(() => {
          if (dots.innerText.length < 3) {
            dots.innerText += ".";
          } else {
            dots.innerText = ".";
          }
        }, 400);
        return interval;
      } else {
        button.innerText = "fragen";
        return undefined;
      }
    };
  </script>
</Layout>
